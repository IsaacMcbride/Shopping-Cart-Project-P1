#include <iostream>
#include <string>
#include <vector>
#include <iomanip>
using namespace std;

// Customer structure
struct Customer
{
    string CUSTOMERNAME;
    string USERNAME;
    string PASSWORD;
    string ACCOUNTNUMBER;
    string MEMBERLEVEL;
    double storeCredit;
    string ADDRESS;
};

// driver function
int main()
{
    Customer customer[4] = {
        {"Jane Smith", "jsmith", "blue123", "12345789", "Gold", 3000.00, "100 W New Haven Ave, Melbourne, FL 32901"},
        {"Ellen Sue Doe", "edoe", "pink234", "234567890", "Blue", 650.00, "235 South Street, Bronx, NY 21110"},
        {"Michael Black", "mblack", "brown124", "235675437", "Blue", 324.00, "56 N Pathway Rd, Phoenix, AZ 56565"},
        {"John Carter", "jcarter", "green289", "987654251", "Diamond", 9000.00, "1060 W Addison St, Chicago, IL 60610"}};

    vector<Customer> customers;
    for (int i = 0; i < 4; i++)
    {
        customers.push_back(customer[i]);
    }

    for (int i = 0; i < customers.size(); i++)
        cout << customers[i].CUSTOMERNAME << " " << customers[i].USERNAME << " " << customers[i].PASSWORD << " " << customers[i].ACCOUNTNUMBER << " " << customers[i].MEMBERLEVEL << " " << customers[i].storeCredit << " " << customers[i].ADDRESS << endl;

const int ITEMS = 6; // number of items for sale

const double SALES_TAX = 6; // sales tax percent

string sku[] = {"HF-342", "RG-324", "LK-322", "KF-231", "PL-643", "PM-263"};

string name[] = {"1/2 in Bolt", "1/2 in Screw", "1/4 in Nail", "Hammer", "Saw", "Lawn Mower"};

int itemsInUnit[] = {50, 30, 25, 1, 1, 1};

double pricePerUnit[] = {20.00, 20.00, 5.75, 15.23, 35.67, 430.39};

int quantityOnHand[] = {200, 174, 76, 100, 35, 10};

string input_username, input_password, input_sku;

int input_qty;
int itemIndex;
int loginAttempt = 1;

double amount, salesTax, totalDue;

cout << right << setw(20) << " LOGIN" << endl;

cout << "Username: ";

cin >> input_username;

cout << "Password: ";

cin >> input_password;

for(int i = 0; i < customers.size(); i++)
{
  if(input_username == customers[i].USERNAME && input_password == customers[i].PASSWORD)
  {

// after Login section

afterLogin:

cout << endl << right << setw(30) << "ITEMS" << endl;

cout << left << setw(10) << "SKU" << left << setw(20) << "Name" << right << setw(15) << "Items in unit"

<< right << setw(20) << "Price per unit" << right << setw(20) << "Quantity on hand" << endl;

cout << fixed << setprecision(2);

for(int i=0;i<ITEMS;i++)

{

cout << left << setw(10) << sku[i] << left << setw(20) << name[i] << right << setw(10) << itemsInUnit[i]

<< right << setw(20) << pricePerUnit[i] << right << setw(20) << quantityOnHand[i] << endl;

}

cout << endl << "Enter the SKU of the item to purchase: ";

cin >> input_sku;

itemIndex = -1;

for(int i=0;i<ITEMS;i++)

{

if(sku[i] == input_sku)

{

itemIndex = i;

break;

}

}

if(itemIndex == -1) // invalid sku, display error and exit

cout << "ERROR: Invalid SKU!!!! Terminating the program..." << endl;

else

{

cout << "Enter the quantity to purchase: ";

cin >> input_qty;

if(input_qty < 1 || input_qty > quantityOnHand[itemIndex])

cout << "ERROR: Insufficient quantity. Quantity must be between [1, " << quantityOnHand[itemIndex] << "]. Terminating the program..." << endl;

else

{ 

quantityOnHand[itemIndex] -= input_qty;

amount = input_qty * pricePerUnit[itemIndex];

salesTax = (amount * SALES_TAX)/100;

totalDue = amount + salesTax;

if(totalDue > customers[i].storeCredit)

cout << "ERROR: Insufficient store credit!!! Terminating the program..." << endl;

else

{

customers[i].storeCredit -= totalDue;

cout << endl << "*********************** RECEIPT **************************" << endl;

cout << left << setw(20) << "Customer Name" << ": " << customers[i].CUSTOMERNAME << endl;

cout << left << setw(20) << "Account Number" << ": " << customers[i].ACCOUNTNUMBER << endl;

cout << left << setw(20) << "Member Level" << ": " << customers[i].MEMBERLEVEL << endl;

cout << left << setw(20) << "Address" << ": " << customers[i].ADDRESS << endl;

cout << "=========================================================================" << endl;

cout << left << setw(20) << "Item SKU" << ": " << input_sku << endl;

cout << left << setw(20) << "Item Name" << ": " << name[itemIndex] << endl;

cout << left << setw(20) << "Items in unit" << ": " << right << setw(10) << itemsInUnit[itemIndex] << endl;

cout << left << setw(20) << "Price per unit" << ": $" << right << setw(8) << pricePerUnit[itemIndex] << endl;

cout << left << setw(20) << "Quantity" << ":" << right << setw(10) << input_qty << endl;

cout << left << setw(20) << "Gross Amount" << ": $" << right << setw(8) << amount << endl;

cout << left << setw(20) << "Sales Tax" << ": $" << right << setw(8) << salesTax << endl;

cout << left << setw(20) << "Total Amount" << ": $" << right << setw(8) << totalDue << endl;

cout << left << setw(20) << "Store Credit" << ": $" << right << setw(8) << customers[i].storeCredit << endl;

cout << endl << "**** Thank you for your purchase. Have a nice day! ****" << endl;

// ask the customer if he wants to purchase more items

string response;

cout << "Want to purchase more items? (y/n) : ";

cin >> response;

// if yes, then redirect the customer to after login menu

if( response == "y" ) {

// send the customer to start of the program in the after login menu

goto afterLogin;

}

else if( response == "n" ) {

cout << "Thank you for your purchases! "<< endl;

} else {

cout << "Wrong Input! Terminating the program..." << endl;

}
}
}
}
}
// code for the number of login attempts
else
for(loginAttempt=1;loginAttempt<3;loginAttempt++){

cout << "ERROR: Invalid USERNAME and/or PASSWORD. Try again! " << endl;

cout << "Username: ";

cin >> input_username;

cout << "Password: ";

cin >> input_password;

if(input_username == customers[i].USERNAME && input_password == customers[i].PASSWORD){
cout << endl << right << setw(30) << "ITEMS" << endl;

cout << left << setw(10) << "SKU" << left << setw(20) << "Name" << right << setw(15) << "Items in unit"

<< right << setw(20) << "Price per unit" << right << setw(20) << "Quantity on hand" << endl;

cout << fixed << setprecision(2);

for(int i=0;i<ITEMS;i++)

{

cout << left << setw(10) << sku[i] << left << setw(20) << name[i] << right << setw(10) << itemsInUnit[i]

<< right << setw(20) << pricePerUnit[i] << right << setw(20) << quantityOnHand[i] << endl;

}

cout << endl << "Enter the SKU of the item to purchase: ";

cin >> input_sku;

itemIndex = -1;

for(int i=0;i<ITEMS;i++)

{

if(sku[i] == input_sku)

{

itemIndex = i;

break;

}

}

if(itemIndex == -1) // invalid sku, display error and exit

cout << "ERROR: Invalid SKU!!!! Terminating the program..." << endl;

else

{

cout << "Enter the quantity to purchase: ";

cin >> input_qty;

if(input_qty < 1 || input_qty > quantityOnHand[itemIndex])

cout << "ERROR: Insufficient quantity. Quantity must be between [1, " << quantityOnHand[itemIndex] << "]. Terminating the program..." << endl;

else

{ 

quantityOnHand[itemIndex] -= input_qty;

amount = input_qty * pricePerUnit[itemIndex];

salesTax = (amount * SALES_TAX)/100;

totalDue = amount + salesTax;

if(totalDue > customers[i].storeCredit)

cout << "ERROR: Insufficient store credit!!! Terminating the program..." << endl;

else

{

customers[i].storeCredit -= totalDue;

cout << endl << "*********************** RECEIPT **************************" << endl;

cout << left << setw(20) << "Customer Name" << ": " << customers[i].CUSTOMERNAME << endl;

cout << left << setw(20) << "Account Number" << ": " << customers[i].ACCOUNTNUMBER << endl;

cout << left << setw(20) << "Member Level" << ": " << customers[i].MEMBERLEVEL << endl;

cout << left << setw(20) << "Address" << ": " << customers[i].ADDRESS << endl;

cout << "=========================================================================" << endl;

cout << left << setw(20) << "Item SKU" << ": " << input_sku << endl;

cout << left << setw(20) << "Item Name" << ": " << name[itemIndex] << endl;

cout << left << setw(20) << "Items in unit" << ": " << right << setw(10) << itemsInUnit[itemIndex] << endl;

cout << left << setw(20) << "Price per unit" << ": $" << right << setw(8) << pricePerUnit[itemIndex] << endl;

cout << left << setw(20) << "Quantity" << ":" << right << setw(10) << input_qty << endl;

cout << left << setw(20) << "Gross Amount" << ": $" << right << setw(8) << amount << endl;

cout << left << setw(20) << "Sales Tax" << ": $" << right << setw(8) << salesTax << endl;

cout << left << setw(20) << "Total Amount" << ": $" << right << setw(8) << totalDue << endl;

cout << left << setw(20) << "Store Credit" << ": $" << right << setw(8) << customers[i].storeCredit << endl;

cout << endl << "**** Thank you for your purchase. Have a nice day! ****" << endl;

// ask the customer if he wants to purchase more items

string response;

cout << "Want to purchase more items? (y/n) : ";

cin >> response;

// if yes, then redirect him to after login menu

if( response == "y" ) {

// send the customer to start of the program in the after login menu

goto afterLogin;

}

else if( response == "n" ) {

cout << "Thank you for your purchases! "<< endl;

} else {

cout << "Wrong Input! Terminating the program..." << endl;

}

}

}

}

}

}

return 0;
}
}
